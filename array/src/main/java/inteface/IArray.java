package inteface;

/**
 * 数组： 数组和广义表是线性表的拓展，表中的元素本身也是一个数据结构
 * 数组中 除第一个元素和最后一个元素外，每个元素都只有一个前驱和后继，这n个元素仍然是线性关系
 * 所有数据元素都必须属于同一个数据类型
 * 数组一旦定义，它的维度维界就不再变化，除了初始化和销毁之外  数组只有存取元素和修改元素值的操作
 *
 * 一个n维数组类型可以定义为其数据元素为n-1维数组类型的一维数组类型
 *
 * n维数组存储的时候，可以分为行序存储和列序存储，目前大部分语言以行序存储
 * 行序存储是 n维数组，一行的所有元素看作为一个元素， 列序存储则是一列所有元素看作一个元素
 *
 * 对于数组 一旦给定了下标即可求的其存储位置
 * 以行序存储为例
 * 假设每个元素占L个存储单元，则二维数组A中任一元素aij的存储位置为
 * LOC(i,j)=LOC(0,0)+(行长度xi+j)L      LOC(0,0)为a00的位置
 *
 * 如果是n维数组 LOC(i,j...)=LOC(0,0...)+(（行长度xi）的累加和 +j)L
 *
 * 因此 会发现，不管怎样，计算任意元素位置的时间是一个常数，可以视为相等，所以存取任意元素时间相等，这个特点的存储结构叫随机存储结构
 *
 *
 */
public interface IArray<T> {

    /**
     *
     * @param dim 维数
     * @param lenths  每个维数的长度
     */
    void InitArray(int dim,int ...lenths);

    void DestroyArray();

    /**
     * n 个下标值
     * @param n
     */
    T Value(int ...n);

    /**
     *
     * @param elem 元素
     * @param n  n个下标值
     */
    void Assign(T elem,int ...n);

}
